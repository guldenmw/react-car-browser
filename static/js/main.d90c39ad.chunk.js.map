{"version":3,"sources":["components/navbar/styles.ts","components/navbar/index.tsx","components/navbar/container.ts","modules/actions/index.ts","components/filters/styles.ts","components/filters/index.tsx","components/filters/container.ts","components/vehicle-card/styles.ts","components/vehicle-card/index.tsx","components/vehicle-card/container.ts","components/app/styles.ts","components/app/index.tsx","components/app/container.ts","helpers/index.ts","serviceWorker.ts","modules/reducer/index.ts","modules/middleware.ts","modules/api/get-vehicles/index.ts","modules/api/get-wiki-summary/index.ts","modules/sagas/index.ts","modules/store.ts","index.tsx"],"names":["StyledShoppingCartIcon","styled","ShoppingCartIcon","StyledPopover","Popover","Navbar","props","label","cart","removeItemFromCart","React","useState","anchorEl","setAnchorEl","AppBar","position","Toolbar","Box","flexGrow","Typography","variant","IconButton","onClick","event","currentTarget","aria-label","aria-controls","aria-haspopup","Badge","badgeContent","length","color","id","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","map","vehicle","index","className","key","manufacturer","model","display","justifyContent","alignItems","pr","defaultProps","connect","state","dispatch","type","data","StyledFilters","div","Filter","FilterHeader","span","priceRange","value","Filters","filters","updateFilter","resetFilters","priceFrom","find","price","priceTo","Autocomplete","onChange","newValue","disableClearable","options","renderInput","params","TextField","body","getOptionLabel","option","Button","field","StyledVehicleCard","VehicleCard","addItemToCart","vehicleDescription","imgUrl","src","alt","summary","startIcon","size","StyledApp","App","vehicles","isLoading","hasError","fetchVehicles","useEffect","width","height","CircularProgress","filteredVehicles","Object","entries","forEach","val","includes","filter","Number","getFilteredVehicles","window","location","hostname","match","initialState","message","vehicleReducer","action","filteredCart","item","sagaMiddleware","createSagaMiddleware","getVehicles","a","fetch","response","json","getWikiSummary","vehicleTitle","url","sagaWorker","truncateSummary","truncated","split","replace","pop","join","getVehicleSummaries","Promise","all","wikiResponse","extract","call","result","put","console","error","takeLatest","createStore","composeWithDevTools","applyMiddleware","run","saga","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.d90c39ad.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { Popover } from '@material-ui/core';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\n\n\nexport const StyledShoppingCartIcon = styled(ShoppingCartIcon)`\n  color: #fff;\n`;\n\nexport const StyledPopover = styled(Popover)`\n  .MuiPaper-root {\n    min-width: 250px;\n    padding: 10px 0 10px 20px;\n  }\n  \n  .cart-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    \n    p {\n      padding-right: 15px;\n    }\n  }\n`;","import React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { AppBar, Badge, Box, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { IVehicle } from '../../modules/interfaces';\nimport { StyledPopover, StyledShoppingCartIcon } from './styles';\nimport { mapDispatchToProps, mapStateToProps } from './container';\n\n\ninterface IComponentProps {\n  label: string;\n}\n\ninterface IContainerProps {\n  cart?: IVehicle[];\n  removeItemFromCart?: (vehicle: IVehicle) => void;\n}\n\ntype IProps = IComponentProps & IContainerProps;\n\n/**\n * App Navbar component displaying branding and cart\n */\nconst Navbar: FC<IProps> = (props) => {\n  const {\n    label,\n    cart,\n    removeItemFromCart,\n  } = props;\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Box flexGrow={1}>\n          <Typography variant={'h6'}>{label}</Typography>\n        </Box>\n        <IconButton\n          onClick={handleClick}\n          aria-label={'show shopping cart'}\n          aria-controls={'shopping-cart-menu'}\n          aria-haspopup={'true'}\n        >\n          <Badge badgeContent={cart?.length} color={'error'}>\n            <StyledShoppingCartIcon/>\n          </Badge>\n        </IconButton>\n        <StyledPopover\n          id={'cart'}\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          {!!cart?.length && cart?.map((vehicle, index) => (\n            <div className={'cart-item'} key={index}>\n              <Typography>\n                {`${vehicle?.manufacturer} ${vehicle?.model} `}\n              </Typography>\n              <IconButton\n                onClick={() => removeItemFromCart(vehicle)}\n                aria-label={'remove from shopping cart'}\n              >\n                <DeleteIcon color={'error'}/>\n              </IconButton>\n            </div>\n          ))}\n          {!cart?.length && (\n            <Box display={'flex'} justifyContent={'center'} alignItems={'center'} pr={'20px'}>\n              <Typography>Your cart is empty.</Typography>\n            </Box>\n          )}\n        </StyledPopover>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nNavbar.defaultProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar) as typeof Navbar;\n","import { Dispatch } from 'redux';\nimport { removeItemFromCart } from '../../modules/actions';\nimport { IVehicle } from '../../modules/interfaces';\nimport { IVehicleReducerState } from '../../modules/reducer';\n\n\nexport const mapStateToProps = (state: IVehicleReducerState) => {\n  const { cart } = state;\n\n  return {\n    cart,\n  };\n};\nexport const mapDispatchToProps = (dispatch: Dispatch) => ({\n  removeItemFromCart(vehicle: IVehicle) {\n    dispatch(removeItemFromCart(vehicle));\n  },\n});","import { IVehicle } from '../interfaces';\n\nexport const FETCH_VEHICLES_START = 'fetch-vehicles-start';\nexport const FETCH_VEHICLES_SUCCESS = 'fetch-vehicles-success';\nexport const FETCH_VEHICLES_ERROR = 'fetch-vehicles-error';\nexport const UPDATE_FILTER = 'update-filter';\nexport const RESET_FILTERS = 'reset-filters';\nexport const ADD_ITEM_TO_CART = 'add-item-to-cart';\nexport const REMOVE_ITEM_FROM_CART = 'remove-item-from-cart';\n\n\nexport const fetchVehiclesStart = () => ({\n  type: FETCH_VEHICLES_START,\n});\n\nexport const fetchVehiclesSuccess = (data: IVehicle[]) => ({\n  type: FETCH_VEHICLES_SUCCESS, data,\n});\n\nexport const fetchVehiclesError = () => ({\n  type: FETCH_VEHICLES_ERROR,\n});\n\nexport const updateFilter = (data: { field: string, value: string }) => ({\n  type: UPDATE_FILTER, data,\n});\n\nexport const resetFilters = () => ({\n  type: RESET_FILTERS,\n});\n\nexport const addItemToCart = (data: IVehicle) => ({\n  type: ADD_ITEM_TO_CART, data,\n});\n\nexport const removeItemFromCart = (data: IVehicle) => ({\n  type: REMOVE_ITEM_FROM_CART, data,\n});\n","import styled from 'styled-components';\n\n\nexport const StyledFilters = styled.div<any>`\n  background-color: #f1f1f1;\n  height: 100%;\n  min-width: 200px;\n  padding: 0 10px;\n`;\n\nexport const Filter = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  select {\n    border-radius: 4px;\n    height: 20px;\n  }\n`;\n\nexport const FilterHeader = styled.span`\n  font-size: 16px;\n  font-weight: bold;\n  padding-bottom: 10px;\n`;","import React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, TextField } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\n\nimport { IFilters } from '../../modules/interfaces';\nimport { Filter, FilterHeader, StyledFilters } from './styles';\nimport { mapDispatchToProps, mapStateToProps } from './container';\n\n\ninterface IProps {\n  filters?: IFilters;\n  updateFilter?: (field: string, value: string) => void;\n  resetFilters?: () => void;\n}\n\nconst priceRange = [\n  { label: 'R0', value: '0'},\n  { label: 'R200 000', value: '200000'},\n  { label: 'R400 000', value: '400000'},\n  { label: 'R600 000', value: '600000'},\n  { label: 'R800 000', value: '800000'},\n  { label: 'R1 000 000', value: '1000000'},\n  { label: 'R1 200 000', value: '1200000'},\n  { label: 'R1 400 000', value: '1400000'},\n  { label: 'R1 600 000', value: '1600000'},\n]\n\n/**\n * Component responsible for updating filter values in state\n */\nconst Filters: FC<IProps> = (props) => {\n  const {\n    filters,\n    updateFilter,\n    resetFilters,\n  } = props;\n  const priceFrom = priceRange.find((price) => price?.value === filters?.priceFrom);\n  const priceTo = priceRange.find((price) => price?.value === filters?.priceTo);\n\n  return (\n    <StyledFilters className={'filters'}>\n      <Filter>\n        <Autocomplete\n          value={filters?.manufacturer}\n          onChange={(event: any, newValue: string | null) => {\n            updateFilter('manufacturer', newValue);\n          }}\n          disableClearable\n          options={[\n            'Any',\n            'Porsche',\n            'Nissan',\n            'BMW',\n            'Audi',\n            'Mercedes-Benz',\n            'Ford',\n          ]}\n          renderInput={(params) => <TextField {...params} label={'Manufacturer'}/>}\n        />\n      </Filter>\n      <Filter>\n        <Autocomplete\n          value={filters?.body}\n          onChange={(event: any, newValue: string | null) => {\n            updateFilter('body', newValue);\n          }}\n          disableClearable\n          options={[\n            'Any',\n            'Coupé',\n            'Sedan',\n            'SUV',\n          ]}\n          renderInput={(params) => <TextField {...params} label={'Body Style'}/>}\n        />\n      </Filter>\n      <Filter>\n        <FilterHeader>Price Range</FilterHeader>\n      </Filter>\n      <Filter>\n        <Autocomplete\n          value={priceFrom}\n          onChange={(event: any,  newValue: { label: string, value: string }) => {\n            updateFilter('priceFrom', newValue?.value);\n          }}\n          disableClearable\n          options={priceRange}\n          getOptionLabel={(option) => option?.label}\n          renderInput={(params) => <TextField {...params} label={'Price From'}/>}\n        />\n      </Filter>\n      <Filter>\n        <Autocomplete\n          value={priceTo}\n          onChange={(event: any, newValue: { label: string, value: string }) => {\n            updateFilter('priceTo', newValue?.value);\n          }}\n          disableClearable\n          options={priceRange}\n          getOptionLabel={(option) => option?.label}\n          renderInput={(params) => <TextField {...params} label={'Price To'}/>}\n        />\n      </Filter>\n      <Filter>\n        <Button variant={'contained'} onClick={resetFilters}>Reset</Button>\n      </Filter>\n    </StyledFilters>\n  );\n};\n\nFilters.defaultProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filters) as typeof Filters;\n","import { Dispatch } from 'redux';\nimport { IVehicleReducerState } from '../../modules/reducer';\nimport { resetFilters, updateFilter } from '../../modules/actions';\n\n\nexport const mapStateToProps = (state: IVehicleReducerState) => {\n  const { filters } = state;\n\n  return {\n    filters\n  };\n};\n\nexport const mapDispatchToProps = (dispatch: Dispatch) => ({\n  updateFilter(field: string, value: string) {\n    dispatch(updateFilter({ field, value }));\n  },\n  resetFilters() {\n    dispatch(resetFilters());\n  },\n});\n","import styled from 'styled-components';\n\n\nexport const StyledVehicleCard = styled.div<any>`\n  border-radius: 4px;\n  box-shadow: 0 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12);\n  display: flex;\n  margin: 10px 20px;\n  max-width: 1200px;\n  max-height: 180px;\n  \n  img {\n    height: 180px;\n    min-width: 350px;\n    object-fit: cover;\n    border-radius: 5px 0 0 5px;\n  }\n\n  .vehicle-listing-body {\n    margin: 15px 20px;\n    width: 100%;\n    display: flex;\n    \n    .description {\n      flex-grow: 1;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: normal;\n    }\n\n    .add-to-cart {\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n      align-items: flex-end;\n      min-width: 150px;\n      margin-left: 15px;\n\n      .vehicle-price {\n        span {\n          font-size: 25px;\n        }\n      }\n    }\n  }\n`;\n","import React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Typography } from '@material-ui/core';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\n\nimport { IVehicle } from '../../modules/interfaces';\nimport { StyledVehicleCard } from './styles';\nimport { mapDispatchToProps } from './container';\n\n\nconst imageBaseUrl = 'https://warpfrontendtestserver.herokuapp.com/public'\n\ninterface IComponentProps {\n  vehicle: IVehicle;\n}\n\ninterface IContainerProps {\n  addItemToCart?: (vehicle: IVehicle) => void;\n}\n\ntype IProps = IComponentProps & IContainerProps;\n\n/**\n * Vehicle card component responsible for displaying all vehicle information\n */\nconst VehicleCard: FC<IProps> = (props) => {\n  const { vehicle, addItemToCart } = props;\n\n  const vehicleDescription = `${vehicle?.manufacturer}_${vehicle?.model}`;\n  const imgUrl = `${imageBaseUrl}/${vehicleDescription}.jpg`;\n\n  return (\n    <StyledVehicleCard>\n      <img className={'vehicle-image'} src={imgUrl} alt={vehicleDescription}/>\n      <div className={'vehicle-listing-body'}>\n        <article className={'description'}>\n          <Typography variant={'h6'}>{vehicle?.manufacturer} {vehicle?.model} - {vehicle?.body}</Typography>\n          <div className={'vehicle-summary'}>\n            <Typography variant={'caption'}>\n              {vehicle?.summary}\n            </Typography>\n          </div>\n        </article>\n        <section className={'add-to-cart'}>\n          <div className={'vehicle-price'}>\n            <span>{`R${vehicle?.price}`}</span>\n          </div>\n          <div className={'add-to-cart'}>\n            <Button\n              variant={'contained'}\n              onClick={() => addItemToCart(vehicle)}\n              startIcon={<AddShoppingCartIcon/>}\n              color={'primary'}\n              size={'small'}\n            >\n              Add to cart\n            </Button>\n          </div>\n        </section>\n      </div>\n    </StyledVehicleCard>\n  );\n};\n\nVehicleCard.defaultProps = {};\n\nexport default connect(null, mapDispatchToProps)(VehicleCard) as typeof VehicleCard;\n","import { Dispatch } from 'redux';\nimport { addItemToCart } from '../../modules/actions';\nimport { IVehicle } from '../../modules/interfaces';\n\n\nexport const mapDispatchToProps = (dispatch: Dispatch) => ({\n  addItemToCart(vehicle: IVehicle) {\n    dispatch(addItemToCart(vehicle));\n  },\n});","import styled from 'styled-components';\n\n\nexport const StyledApp = styled.div<any>`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  height: 100%;\n\n  .app-body {\n    display: flex;\n    flex-grow: 1;\n    overflow: hidden;\n  }\n  \n  .vehicle-listings {\n    display: flex;\n    flex-direction: column;\n    overflow: scroll;\n    flex-grow: 1;\n    align-items: center;\n\n  }\n`;\n","import React, { FC, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Box, CircularProgress, Typography } from '@material-ui/core';\n\nimport Navbar from '../../components/navbar';\nimport Filters from '../../components/filters';\n\nimport { IVehicle } from '../../modules/interfaces';\nimport VehicleCard from '../../components/vehicle-card';\nimport { StyledApp } from './styles';\nimport { mapDispatchToProps, mapStateToProps } from './container';\n\n\ninterface IProps {\n  vehicles: IVehicle[];\n  isLoading: boolean;\n  hasError: boolean;\n  fetchVehicles?: () => void;\n}\n\n/**\n * Main App component\n */\nconst App: FC<IProps> = (props) => {\n  const {\n    vehicles,\n    isLoading,\n    hasError,\n    fetchVehicles,\n  } = props;\n\n  // On the first load, dispatch the action to fetch all vehicles\n  useEffect(() => {\n    fetchVehicles();\n  }, [fetchVehicles]);\n\n  return (\n    <StyledApp>\n      <Navbar label={'We Show Cars!'}/>\n      <aside className={'app-body'}>\n        <Filters/>\n        <section className={'vehicle-listings'}>\n          {isLoading && (\n            <Box\n              display={'flex'}\n              justifyContent={'center'}\n              alignItems={'center'}\n              width={'100%'}\n              height={'70%'}\n            >\n              <CircularProgress size={100}/>\n            </Box>\n          )}\n\n          {!isLoading && !hasError && vehicles?.map((vehicle) => (\n            <VehicleCard vehicle={vehicle} key={vehicle?.id}/>\n          ))}\n\n          {hasError && (\n            <Box\n              display={'flex'}\n              justifyContent={'center'}\n              alignItems={'center'}\n              width={'100%'}\n              height={'70%'}\n            >\n              <Typography variant={'h5'}>Failed to load vehicles.</Typography>\n            </Box>\n          )}\n        </section>\n      </aside>\n    </StyledApp>\n  );\n};\n\nApp.defaultProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { Dispatch } from 'redux';\nimport { IVehicleReducerState } from '../../modules/reducer';\nimport { fetchVehiclesStart } from '../../modules/actions';\nimport { getFilteredVehicles } from '../../helpers';\n\n\nexport const mapStateToProps = (state: IVehicleReducerState) => {\n  const { vehicles, isLoading, hasError, filters } = state;\n  const filteredVehicles = getFilteredVehicles(vehicles, filters);\n\n  return {\n    vehicles: filteredVehicles,\n    isLoading,\n    hasError,\n  };\n};\n\nexport const mapDispatchToProps = (dispatch: Dispatch) => ({\n  fetchVehicles() {\n    dispatch(fetchVehiclesStart());\n  },\n});\n","import { IFilters, IVehicle } from '../modules/interfaces';\n\nexport const getFilteredVehicles = (vehicles: IVehicle[], filters: IFilters): IVehicle[] => {\n  let filteredVehicles = vehicles;\n\n  Object.entries(filters).forEach(([key, val]) => {\n    if (['Any', '0'].includes(val)) {\n      return;\n    } else if (['manufacturer', 'body'].includes(key)) {\n      filteredVehicles = filteredVehicles.filter(vehicle => vehicle?.[key] === val);\n    } else if (key === 'priceFrom') {\n      const price = Number(val);\n      filteredVehicles = filteredVehicles.filter(vehicle => vehicle?.price >= price);\n    } else if (key === 'priceTo') {\n      const price = Number(val);\n      filteredVehicles = filteredVehicles.filter(vehicle => vehicle?.price <= price);\n    }\n  });\n\n  return filteredVehicles;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  FETCH_VEHICLES_START,\n  FETCH_VEHICLES_SUCCESS,\n  FETCH_VEHICLES_ERROR, UPDATE_FILTER, RESET_FILTERS, ADD_ITEM_TO_CART, REMOVE_ITEM_FROM_CART,\n} from '../actions';\n\n\nimport { IFilters, IVehicle } from '../interfaces';\n\nexport interface IVehicleReducerState {\n  vehicles: IVehicle[];\n  message: string;\n  isLoading: boolean;\n  hasError: boolean;\n  filters: IFilters;\n  cart: IVehicle[];\n}\n\nconst initialState: IVehicleReducerState = {\n  vehicles: [],\n  message: '',\n  isLoading: false,\n  hasError: false,\n  filters: {\n    manufacturer: 'Any',\n    body: 'Any',\n    priceFrom: '0',\n    priceTo: '0',\n  },\n  cart: [],\n};\n\nconst vehicleReducer = (state = initialState, action: {type: string, data: any}): IVehicleReducerState => {\n  const { type, data } = action;\n  switch (type) {\n    case FETCH_VEHICLES_START: {\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n        message: '',\n      }\n    }\n\n    case FETCH_VEHICLES_SUCCESS: {\n      return {\n        ...state,\n        vehicles: data,\n        isLoading: false,\n        hasError: false,\n      }\n    }\n\n    case FETCH_VEHICLES_ERROR: {\n      return {\n        ...state,\n        isLoading: false,\n        hasError: true,\n        message: '',\n      }\n    }\n\n    case UPDATE_FILTER: {\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          [data?.field]: data?.value,\n        }\n      }\n    }\n\n    case RESET_FILTERS: {\n      return {\n        ...state,\n        filters: {\n          manufacturer: 'Any',\n          body: 'Any',\n          priceFrom: '0',\n          priceTo: '0',\n        }\n      }\n    }\n\n    case ADD_ITEM_TO_CART: {\n      return {\n        ...state,\n        cart: [\n          ...state.cart,\n          data,\n        ]\n      }\n    }\n\n    case REMOVE_ITEM_FROM_CART: {\n      const filteredCart = state?.cart?.filter(item => item?.id !== data?.id);\n      return {\n        ...state,\n        cart: filteredCart,\n      }\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default vehicleReducer;\n","import createSagaMiddleware from 'redux-saga'\n\nexport const sagaMiddleware = createSagaMiddleware()\n\nexport default [sagaMiddleware]","import { IVehiclesResponse } from '../../interfaces';\n\n\n/**\n * API wrapper responsible for fetching all vehicles\n */\nconst getVehicles = async (): Promise<IVehiclesResponse> => {\n  const url = `https://warpfrontendtestserver.herokuapp.com/v1/vehicles`;\n  const response = await fetch(url);\n  return await response.json();\n};\n\nexport default getVehicles;","import { IWikiResponse } from '../../interfaces';\n\n\n/**\n * API wrapper responsible for fetching vehicle summary from Wikipedia\n */\nconst getWikiSummary = async (vehicleTitle: string): Promise<IWikiResponse> => {\n  const url = `https://en.wikipedia.org/api/rest_v1/page/summary/${vehicleTitle}?redirect=true`;\n  const response = await fetch(url);\n  return await response.json();\n};\n\nexport default getWikiSummary;","import { call, put, takeLatest } from 'redux-saga/effects';\nimport { FETCH_VEHICLES_START, fetchVehiclesError, fetchVehiclesSuccess } from '../actions';\nimport getVehicles from '../api/get-vehicles';\nimport getWikiSummary from '../api/get-wiki-summary';\nimport { IVehicle, IVehiclesResponse, IWikiResponse } from '../interfaces';\n\n/**\n * Truncate summary to a certain length to preserve responsiveness\n */\nconst truncateSummary = (summary: string) => {\n  let truncated = summary;\n  while (truncated?.length > 210) {\n    const split = truncated.replace(/([.?!])\\s*(?=[A-Z])/g, \"$1|\").split(\"|\");\n    split.pop();\n    truncated = split.join(' ');\n  }\n  return truncated;\n}\n\n/**\n * Iterate through vehicles, appending a summary fetched\n * from Wikipedia to each vehicle object\n * @param vehicles - API response object containing vehicles nested under 'data' key\n */\nconst getVehicleSummaries = async (vehicles: IVehiclesResponse) => {\n  return await Promise.all(vehicles?.data?.map(async (vehicle: IVehicle) => {\n    // Combine manufacturer and model strings to get vehicle title\n    const vehicleTitle = `${vehicle?.manufacturer}_${vehicle?.model}`;\n\n    const wikiResponse: IWikiResponse = await getWikiSummary(vehicleTitle);\n    const summary = truncateSummary(wikiResponse?.extract);\n\n    return {\n      ...vehicle,\n      summary\n    }\n  }))\n}\n\n/**\n * Saga worker responsible for fetching all vehicles from\n * the API and their summaries from Wikipedia and\n * sending it through to the reducer to be stored\n */\nfunction* sagaWorker() {\n  try {\n    const result = yield call(getVehicles);\n\n    const vehicles: IVehicle[] = yield call(getVehicleSummaries, result);\n\n    return yield put(fetchVehiclesSuccess(vehicles));\n  } catch (ex) {\n    console.error(ex);\n    return yield put(fetchVehiclesError());\n  }\n}\n\n/**\n * Saga used to wait for specific action before\n * firing off it's worker saga above\n */\nfunction* fetchVehicles() {\n  yield takeLatest([FETCH_VEHICLES_START], sagaWorker);\n}\n\nexport default fetchVehicles;\n","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport vehicleReducer from '../modules/reducer'\nimport { sagaMiddleware } from './middleware';\nimport saga from '../modules/sagas';\n\nexport default createStore(\n  vehicleReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n)\n\nsagaMiddleware.run(saga)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './modules/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}